// DO NOT EDIT! This file is automatically generated.
import request from './request';

export type AddBookDto = { name: string; author: string; retailPrice: number };
export type AddCustomerDto = {
  firstName: string;
  lastName: string;
  buyInReason: string;
  vision: string;
  involvement: string;
  startDate: string;
  investmentRangesId: number;
};
export type GetBookDto = { id: number | undefined; name: string | undefined };
export type GetBrandReputationDto = {
  franchiseProgramYear: string;
  totalUnits: number;
  growthRate: number;
  satisfactionScore: number;
};
export type GetCustomerDto = { id: number; customerName: string };
export type GetCustomerFranchiseReportDto = {
  customerName: string;
  buyInReason: string;
  vision: string;
  involvement: string;
  startDate: string;
  franchises?: GetFranchiseDto[];
};
export type GetFranchiseDto = {
  id: number;
  name: string;
  investmentRange: GetInvestmentRangeDto | undefined;
  operationInformation: GetOperationInformationDto | undefined;
  brandReputation: GetBrandReputationDto | undefined;
};
export type GetInvestmentRangeDto = {
  id: number | undefined;
  name: string | undefined;
};
export type GetOperationInformationDto = {
  staffCountRequirement: number;
  approvedSupplierOnly: boolean;
  corporateSupplierOnly: boolean;
};
export type GetStateDto = { id: number | undefined; name: string | undefined };
export type RequestFranchisesDto = {
  franchises: GetFranchiseDto[];
  totalPages: number;
  totalCount: number;
};

export default {
  books: {
    create(params: { book: AddBookDto }): Promise<boolean> {
      return request('post', '/books/create', params);
    },
    getBook(params: { id: number }): Promise<{ book: GetBookDto }> {
      return request('get', '/books/get_book', params);
    },
    getBooks(): Promise<{ books: GetBookDto[] }> {
      return request('get', '/books/get_books', {});
    },
    hello(): Promise<{ message: string }> {
      return request('get', '/books/hello', {});
    }
  },
  customer: {
    create(params: { customer: AddCustomerDto }): Promise<GetCustomerDto> {
      return request('post', '/customer/create', params);
    },
    customerFranchiseMatchReport(params: {
      id: number;
    }): Promise<GetCustomerFranchiseReportDto | undefined> {
      return request(
        'get',
        '/customer/customer_franchise_match_report',
        params
      );
    }
  },
  franchise: {
    allFranchises(params: {
      page: number;
      perPage: number;
      franchiseName: string | undefined;
    }): Promise<RequestFranchisesDto> {
      return request('get', '/franchise/all_franchises', params);
    }
  },
  investmentRange: {
    investmentRangeList(): Promise<GetInvestmentRangeDto[]> {
      return request('get', '/investment_range/investment_range_list', {});
    }
  },
  states: {
    getStates(): Promise<{ states: GetStateDto[] }> {
      return request('get', '/states/get_states', {});
    }
  }
};
